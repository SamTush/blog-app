require 'rails_helper'

RSpec.feature "Posts index page", type: :feature do
  let!(:user) { create(:user) }
  let!(:posts) { create_list(:post, 3, user: user) }
  let!(:comments) { create_list(:comment, 3, post: posts.first) }

  scenario "displays the user's posts" do
    visit posts_path

    expect(page).to have_link("Home", href: "../../")
    expect(page).to have_link("Back", href: :back)
    expect(page).to have_link("Users", href: users_path)

    within(".user-container.posts") do
      expect(page).to have_css("h3", text: user.name)
      expect(page).to have_css(".posts-counter", text: "Number of posts: #{user.posts_counter || 0}")
    end

    posts.each do |post|
      within("#post_#{post.id}") do
        expect(page).to have_link(post.title, href: user_post_path(user, post))
        expect(page).to have_css(".post-details", text: post.text[0..100] + "...")
        expect(page).to have_css(".comment-like-container", text: "Comment: #{post.comment_counter || 0}, Likes: #{post.likes_counter || 0}")

        if post.recent_comments.any?
          post.recent_comments.each do |comment|
            expect(page).to have_css(".post-comments-container li", text: "#{User.find_by(id: comment.user_id).name}: #{comment.text[0..60]}...")
          end
        else
          expect(page).to have_css(".post-comments-container li", text: "No comments added yet.")
        end
      end
    end
  end
end
